@model IEnumerable<FirstWebMVC.Models.Person>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
    <a asp-action="Download" class="w3-btn w3-border w3-border-blue w3-round w3-right w3-tiny w3-horver-blue">Download</a>

</p>
<table class="table">
    <thead>
        <tr>
             <th>
                @Html.DisplayNameFor(model => model.ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.fname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.fname">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.fname">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.fname">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
  @* @Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page = page}),
            new X.PagedList.Web.Common.PagedListRenderOptions { LiElementClasses = new string[] {"page-item"},
            PageClasses = new string[] { "page-link" }}) *@